# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DISABLE_MENU: "true"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven (skip tests)
        run: mvn -B clean package -DskipTests=true --file pom.xml
      
      - name: Run PMD Static Analysis
        run: mvn -B pmd:check -e

      - name: Upload PMD Report on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: target/pmd.xml

      - name: Run Unit Tests
        run: mvn test

      - name: Get latest num tag and increment
        id: get_num_tag
        run: |
          git fetch --tags
         
          LATEST_NUM_TAG=$(git tag -l "build-*" | grep -E '^num-[0-9]+\.[0-9]+(\.[0-9]+)?$' | sort -V | tail -n 1)
          
          if [ -z "$LATEST_NUM_TAG" ]; then
         
          NEW_NUM_VERSION="1.0"
          else
           
            CURRENT_VERSION_PART=$(echo "$LATEST_NUM_TAG" | sed 's/^num-//')
          
            
            IFS='.' read -ra ADDR <<< "$CURRENT_VERSION_PART"
          
            if [ ${#ADDR[@]} -lt 2 ]; then
              echo "Erro: A tag $LATEST_NUM_TAG não tem o formato esperado X.Y ou X.Y.Z."
              exit 1
            fi

            # Pega o valor do segundo componente e incrementa
            MINOR_COMPONENT=${ADDR[1]}
            NEW_MINOR_COMPONENT=$((MINOR_COMPONENT + 1))
          
            # Constrói nova versão mantendo major e minor
            NEW_NUM_VERSION="${ADDR[0]}.${NEW_MINOR_COMPONENT}"
          fi
          
          echo "NEW_NUM_TAG=num-${NEW_NUM_VERSION}" >> $GITHUB_ENV
          echo "NEW_RC_ZIP_NAME=${NEW_NUM_VERSION}.zip" >> $GITHUB_ENV

      - name: Create and Push new NUM Tag
        if: github.ref_name == 'main' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.NEW_NUM_TAG }}
          git push origin ${{ env.NEW_NUM_TAG }}

      
